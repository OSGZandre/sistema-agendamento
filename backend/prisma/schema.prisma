generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                   Int           @id @default(autoincrement())
  nome                 String        @db.Text
  email                String        @unique
  senha                String        @db.Text
  tipo                 TipoUsuario
  telefone             String?       @db.Text
  endereco             String?       @db.Text
  descricaoNegocio     String?       @db.Text
  fotoPerfil           String?       @db.Text
  pagamentoConfirmado  Boolean       @default(false) 
  criadoEm             DateTime      @default(now())
  servicos             Servico[]     @relation("donoServico")
  agendamentosComoDono Agendamento[] @relation("donoAgendamento")
}

enum TipoUsuario {
  CLIENTE
  DONO
  ADMIN
}

model Servico {
  id               Int               @id @default(autoincrement())
  nome             String            @db.Text
  preco            Float
  duracao          Int               @db.Integer // Duração em minutos
  metodosPagamento MetodoPagamento[]
  diasDisponiveis  DiaSemana[]
  horaInicio       String            @db.Text // Ex.: "08:00"
  horaFim          String            @db.Text // Ex.: "20:00"
  donoId           Int
  dono             Usuario           @relation("donoServico", fields: [donoId], references: [id])
  criadoEm         DateTime          @default(now())
  agendamentos     Agendamento[]
}

model Agendamento {
  id          Int      @id @default(autoincrement())
  data        DateTime
  nomeCliente String   @db.Text
  servicoId   Int
  donoId      Int
  servico     Servico  @relation(fields: [servicoId], references: [id])
  dono        Usuario  @relation("donoAgendamento", fields: [donoId], references: [id])
  criadoEm    DateTime @default(now())
}

enum MetodoPagamento {
  PIX
  CARTAO_DEBITO
  CARTAO_CREDITO
  DINHEIRO
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}