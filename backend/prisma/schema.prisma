generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int            @id @default(autoincrement())
  nome      String         @db.Text
  email     String         @unique
  senha     String         @db.Text
  tipo      TipoUsuario
  criadoEm  DateTime       @default(now())
  servicos  Servico[]      // Relacionamento com serviços criados pelo dono
  agendamentosComoDono    Agendamento[] @relation("donoAgendamento")    // Agendamentos como dono
}

enum TipoUsuario {
  CLIENTE
  DONO
  ADMIN
}

model Servico {
  id                Int            @id @default(autoincrement())
  nome              String         @db.Text
  preco             Float
  duracao           Int            // Duração em minutos
  metodosPagamento  MetodoPagamento[]
  diasDisponiveis   DiaSemana[]
  horaInicio        String         // Ex.: "08:00"
  horaFim           String         // Ex.: "20:00"
  donoId            Int
  dono              Usuario        @relation(fields: [donoId], references: [id])
  criadoEm          DateTime       @default(now())
  agendamentos      Agendamento[]  // Relacionamento com agendamentos
}

model Agendamento {
  id        Int      @id @default(autoincrement())
  data      DateTime // Data e hora do agendamento
  nomeCliente String @db.Text // Nome do cliente (texto livre)
  servicoId Int      // Relacionamento com o serviço
  donoId    Int      // Relacionamento com o dono
  servico   Servico  @relation(fields: [servicoId], references: [id])
  dono      Usuario  @relation("donoAgendamento", fields: [donoId], references: [id])
  criadoEm  DateTime @default(now())
}

enum MetodoPagamento {
  PIX
  CARTAO_DEBITO
  CARTAO_CREDITO
  DINHEIRO
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}